<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="DESKTOP-L2VJL3A" ignored="0" name="mytest3" tests="120" failures="6" timestamp="28 Jan 2020 14:10:30 GMT" time="0.127" errors="0">
  <testcase name="testMethod2" time="0.0" classname="test.testng.AppTest">
    <failure type="java.lang.AssertionError" message="expected [false] but found [true]">
      <![CDATA[java.lang.AssertionError: expected [false] but found [true]
	at test.testng.AppTest.testMethod2(AppTest.java:48)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
... Removed 14 stack frames]]>
    </failure>
  </testcase> <!-- testMethod2 -->
  <testcase name="testMethod3" time="0.001" classname="test.testng.AppTest">
    <failure type="java.lang.AssertionError" message="expected [false] but found [true]">
      <![CDATA[java.lang.AssertionError: expected [false] but found [true]
	at test.testng.AppTest.testMethod3(AppTest.java:54)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
... Removed 14 stack frames]]>
    </failure>
  </testcase> <!-- testMethod3 -->
  <testcase name="method2" time="0.0" classname="test.testng.GroupsTest"/>
  <testcase name="method4" time="0.0" classname="test.testng.GroupsTest"/>
  <testcase name="method3" time="0.0" classname="test.testng.GroupsTest"/>
  <testcase name="mytest1" time="0.0" classname="test.testng.listners.ListnerTest"/>
  <testcase name="mytest2" time="0.0" classname="test.testng.listners.ListnerTest"/>
  <testcase name="mytest1" time="0.0" classname="test.testng.retry.MyRetryTest">
    <failure type="java.lang.AssertionError" message="expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at test.testng.retry.MyRetryTest.mytest1(MyRetryTest.java:13)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
... Removed 14 stack frames]]>
    </failure>
  </testcase> <!-- mytest1 -->
  <testcase name="mytest2" time="0.0" classname="test.testng.retry.MyRetryTest">
    <failure type="java.lang.AssertionError" message="expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at test.testng.retry.MyRetryTest.mytest2(MyRetryTest.java:19)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
... Removed 14 stack frames]]>
    </failure>
  </testcase> <!-- mytest2 -->
  <testcase name="testaddition" time="0.0" classname="test.testng.TestAddition"/>
  <testcase name="testaddition" time="0.0" classname="test.testng.TestAddition">
    <failure type="java.lang.AssertionError" message="expected [11] but found [9]">
      <![CDATA[java.lang.AssertionError: expected [11] but found [9]
	at test.testng.TestAddition.testaddition(TestAddition.java:12)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
... Removed 15 stack frames]]>
    </failure>
  </testcase> <!-- testaddition -->
  <testcase name="testaddition" time="0.0" classname="test.testng.TestAddition"/>
  <testcase name="testexception2" time="0.0" classname="test.testng.TestExceptions"/>
  <testcase name="testexception1" time="0.007" classname="test.testng.TestExceptions"/>
  <testcase name="test4" time="0.001" classname="test.testng.TestPriority"/>
  <testcase name="method1" time="0.0" classname="test.testng.TestClass">
    <failure type="org.testng.TestNGException" message="
Parameter &amp;apos;hostname&amp;apos; is required by @Test on method method1 but has not been marked @Optional or defined
in C:\Users\SudhaChandoo\TestNG\testng\testng.xml">
      <![CDATA[org.testng.TestNGException: 
Parameter 'hostname' is required by @Test on method method1 but has not been marked @Optional or defined
in C:\Users\SudhaChandoo\TestNG\testng\testng.xml
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
... Removed 8 stack frames]]>
    </failure>
  </testcase> <!-- method1 -->
  <testcase name="testmethod4" time="0.0" classname="test.testng.AppTest"/>
  <testcase name="testmethod5" time="0.0" classname="test.testng.AppTest">
    <skipped/>
  </testcase> <!-- testmethod5 -->
  <testcase name="testAdd" time="0.026" classname="test.testng.AppTest"/>
  <testcase name="method1" time="0.0" classname="test.testng.GroupsTest"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.001" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.001" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.001" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.001" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.002" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.001" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.003" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.001" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.001" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.004" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.001" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.003" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.001" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.001" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.003" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.001" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.001" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.001" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.001" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.009" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.001" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.002" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.001" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.001" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.001" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.001" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.001" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.001" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.001" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.006" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.001" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.001" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.001" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.001" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.004" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.001" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.014" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.001" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.001" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.0" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.001" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.001" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.001" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.006" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.006" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.009" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.007" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.008" classname="test.testng.TestParallel"/>
  <testcase name="testparallel" time="0.009" classname="test.testng.TestParallel"/>
</testsuite> <!-- mytest3 -->
