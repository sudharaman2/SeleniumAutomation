<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite name="test.testng.AppTest" tests="6" time="0.034" ignored="5" failures="2" timestamp="28 Jan 2020 14:10:30 GMT" skipped="1" hostname="DESKTOP-L2VJL3A" errors="0">
  <testcase name="testAdd" time="0.007" classname="test.testng.AppTest"/>
  <testcase name="testMethod3" time="0.001" classname="test.testng.AppTest">
    <failure type="java.lang.AssertionError" message="expected [false] but found [true]">
      <![CDATA[java.lang.AssertionError: expected [false] but found [true]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertFalse(Assert.java:63)
	at org.testng.Assert.assertFalse(Assert.java:73)
	at test.testng.AppTest.testMethod3(AppTest.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
    </failure>
  </testcase> <!-- testMethod3 -->
  <testcase name="testmethod4" time="0.000" classname="test.testng.AppTest"/>
  <testcase name="testmethod5" time="0.000" classname="test.testng.AppTest">
    <skipped/>
  </testcase> <!-- testmethod5 -->
  <testcase name="testMethod2" time="0.000" classname="test.testng.AppTest">
    <failure type="java.lang.AssertionError" message="expected [false] but found [true]">
      <![CDATA[java.lang.AssertionError: expected [false] but found [true]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertFalse(Assert.java:63)
	at org.testng.Assert.assertFalse(Assert.java:73)
	at test.testng.AppTest.testMethod2(AppTest.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
    </failure>
  </testcase> <!-- testMethod2 -->
  <testcase name="testAdd" time="0.026" classname="test.testng.AppTest"/>
  <testcase name="testexception1" classname="test.testng.TestExceptions">
    <skipped/>
  </testcase> <!-- testexception1 -->
  <testcase name="testMethod2" classname="test.testng.AppTest">
    <skipped/>
  </testcase> <!-- testMethod2 -->
  <testcase name="testmethod4" classname="test.testng.AppTest">
    <skipped/>
  </testcase> <!-- testmethod4 -->
  <testcase name="testmethod5" classname="test.testng.AppTest">
    <skipped/>
  </testcase> <!-- testmethod5 -->
  <testcase name="testMethod3" classname="test.testng.AppTest">
    <skipped/>
  </testcase> <!-- testMethod3 -->
</testsuite> <!-- test.testng.AppTest -->
